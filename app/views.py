from django.core.mail import send_mail
from django.shortcuts import render
from django.views.generic import CreateView
from emailsendexample import settings
from app.models import Employee
from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger
from twilio.rest import Client
import random
def Register(request):
    name=request.POST.get("name")
    age=request.POST.get("age")
    cno=request.POST.get("cno")
    email=request.POST.get("email")
    image=request.FILES["file"]
    password=str(name[0])+str(name[-1])+str(len(cno))
    if Employee.objects.filter(email=email):
        return render(request,"index.html",{"message":"Email already registred"})
    else:
        Employee(name=name, age=age, contactno=cno, email=email, password=password, image=image).save()
        #for mail sending
        send_mail("New Account Password:",
                  "hello mr/miss: " + name + "Your new account pasword is autogenerated \n the new password is " + password,
                  settings.EMAIL_HOST_USER, [email])
        #For message sending to mobile number
        accountSid = "ACaa3347d26965e518ac905c4b7199095e"
        authToken = "48d134d5473e93b558aabde8d4df8a18"
        twilioClient = Client(accountSid, authToken)
        myTwilioNumber = "+12512201736"
        destCellPhone = "+918639142835"
        myMessage = twilioClient.messages.create(body="Thank you for register,Your account is created\n your temporary password is ---"+password, from_=myTwilioNumber, to=destCellPhone)
        return render(request,"index.html",{"message":"successs"})
def Login(request):
    email=request.POST.get("email")
    password=request.POST.get("password")
    if Employee.objects.filter(email=email,password=password):
        request.session["person_name"] = email
        return render(request,"new.html",{"user":email})
    else:
        return render(request, "index.html", {"message": "login failed"})
def AllEmp(request):
    qry=Employee.objects.all()
    return render(request,"update.html",{"query":qry})
def GotoUpdate(request):
    uname = request.POST.get("name")
    qsy = Employee.objects.filter(name=uname)
    return render(request,"updation.html",{"qsy":qsy})
def Update(request):
    name=request.POST.get("name")
    age=request.POST.get("age")
    cno=request.POST.get("cno")
    email=request.POST.get("email")
    image=request.FILES["file"]
    Employee(name=name,age=age,contactno=cno,email=email,image=image).save()
    return render(request,"update.html",{"message":"updated success"})
def GotoPaginate(request):
    emplist = Employee.objects.all()
    page=request.GET.get("page")
    paginator=Paginator(emplist,2)
    try:
        users = paginator.page(page)
    except PageNotAnInteger:
        users = paginator.page(1)
    except EmptyPage:
        users = paginator.page(paginator.num_pages)
    return render(request,"emplist.html",{"users":users})
def Gotousertype(request):
    return render(request,"usertype.html")
def GamesPage(request):
    return render(request,"games.html")
def GotothisGame(request):
    return render(request,"randomgame.html")


def RandomGame(request):
    while True:
        n = request.POST.get("t1")
        i = random.randint(1, 10)
        n=str(n)
        i=str(i)
        if (n != i):
            return render(request,"randomgame.html",{"message":"your guess is:"+n+"and random is"+i+" so plz try again"})
            continue
        else:
            return render(request, "randomgame.html", {"message":"your guess is"+n+"and random is"+i+" so you won the game and gold coin"})
            break
